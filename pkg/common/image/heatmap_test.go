/*
 * File: heatmap_test.go
 * Project: image
 * File Created: Sunday, 16th April 2023 6:11:26 pm
 * Author: Anonymous (anonymous@gmail.com)
 * -----
 * Last Modified: Friday, 2nd February 2024 2:33:11 pm
 * Modified By: Anonymous (anonymous@gmail.com>)
 */
package image

import (
	"encoding/base64"
	"image"
	"image/jpeg"
	"math/rand"
	"os"
	"strings"
	"testing"
	"time"
)

const b64Image = ""

// TestHeatmap simply tests that we can generate a heatmap. It does not validate the accuracy of it.

func TestHeatmap(t *testing.T) {
	reader := base64.NewDecoder(base64.StdEncoding, strings.NewReader(b64Image))
	img, _, err := image.Decode(reader)
	if err != nil {
		panic(err)
	}

	boundingBoxes := []BoundingBox{}
	rand.New(rand.NewSource(time.Now().UnixNano()))

	b := img.Bounds()
	for i := 0; i < 10; i++ {
		xmin := rand.Intn(b.Dx()-0+1) + 0
		xmax := rand.Intn(b.Dx()-xmin+1) + xmin
		ymin := rand.Intn(b.Dy()-0+1) + 0
		ymax := rand.Intn(b.Dy()-ymin+1) + ymin
		boundingBoxes = append(boundingBoxes, BoundingBox{
			Xmin: xmin,
			Xmax: xmax,
			Ymin: ymin,
			Ymax: ymax,
		})
	}

	points := []DataPoint{}

	for _, box := range boundingBoxes {
		points = append(
			points, P(
				float64(box.Xmin),
				float64(box.Ymin),
				box.Xmax-box.Xmin,
				box.Ymax-box.Ymin),
		)
	}

	heatmap := Heatmap(img.Bounds(),
		points, nil, 100, Classic, OverlayShapeDot)

	overlay := AddOverlay(heatmap, img, 0.5)

	file, err := os.CreateTemp(os.TempDir(), "emld_heatmap.*.jpeg")
	if err != nil {
		panic(err)
	}
	jpeg.Encode(file, overlay, &jpeg.Options{Quality: 100})

	t.Logf("Created heat map at: %s", file.Name())
}
